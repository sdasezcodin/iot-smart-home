name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allow manual triggers

env:
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      dynamodb:
        image: amazon/dynamodb-local:latest
        ports:
          - 8000:8000
        options: >-
          --health-cmd "wget --no-verbose --tries=1 --spider http://localhost:8000/ || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --health-start-period 10s

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            .m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Verify DynamoDB Local is running
        run: |
          echo "Waiting for DynamoDB Local to be ready..."
          timeout 60s bash -c 'until curl -s http://localhost:8000/ > /dev/null; do sleep 2; done'
          echo "DynamoDB Local is ready!"

      - name: Set AWS credentials for testing
        run: |
          aws configure set aws_access_key_id test --profile default
          aws configure set aws_secret_access_key test --profile default
          aws configure set region us-east-1 --profile default
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: us-east-1

      - name: Validate Maven project
        run: mvn validate

      - name: Compile the project
        run: mvn clean compile

      - name: Run tests
        run: mvn test
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: us-east-1
          DYNAMODB_ENDPOINT: http://localhost:8000

      - name: Package application
        run: mvn package -DskipTests

      - name: Verify JAR file
        run: |
          ls -la target/
          if [ -f "target/iot-smarthome-dashboard-1.0-SNAPSHOT.jar" ]; then
            echo "JAR file created successfully"
          else
            echo "JAR file not found!" && exit 1
          fi

      - name: Build Docker image
        run: docker build -t iot-smarthome-dashboard:${{ github.sha }} .

      - name: Test Docker image
        run: |
          # Test that the Docker image can be created and runs
          docker run --rm iot-smarthome-dashboard:${{ github.sha }} --help || echo "Help command completed"

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: iot-app-jar
          path: ./target/iot-smarthome-dashboard-1.0-SNAPSHOT.jar
          retention-days: 5

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: target/surefire-reports/
          retention-days: 5
