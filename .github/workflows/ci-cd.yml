name: Build and Dockerize Dashboard

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-dockerize:
    runs-on: ubuntu-latest
    
    services:
      dynamodb:
        image: amazon/dynamodb-local:1.21.0
        ports:
          - 8000:8000
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Wait for DynamoDB
        run: |
          sleep 30
          for i in {1..5}; do
            if curl -s --connect-timeout 3 http://localhost:8000/ >/dev/null 2>&1; then
              echo "DynamoDB Local ready"
              break
            fi
            sleep 5
          done

      - name: Build application
        run: mvn clean package -DskipTests

      - name: Verify JAR
        run: |
          ls -la target/
          test -f target/iot-smarthome-dashboard-1.0-SNAPSHOT.jar

      - name: Build Docker image
        run: |
          docker build -t iot-smarthome-dashboard:latest .
          docker build -t iot-smarthome-dashboard:v${{ github.run_number }} .

      - name: Test Docker image
        run: |
          docker images | grep iot-smarthome-dashboard
          docker create --name test-container iot-smarthome-dashboard:latest
          docker rm test-container

      - name: Create version number
        id: version
        run: |
          # Create semantic version: 1.01, 1.02, ..., 1.99, 2.01, 2.02, etc.
          MAJOR=$(( (${{ github.run_number }} - 1) / 99 + 1 ))
          MINOR=$(( (${{ github.run_number }} - 1) % 99 + 1 ))
          VERSION="$MAJOR.$(printf '%02d' $MINOR)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Created version: $VERSION"

      - name: Save Docker image as tarball
        run: |
          docker save iot-smarthome-dashboard:latest -o iot-smarthome-dashboard-v${{ steps.version.outputs.version }}.tar
          ls -lh *.tar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: sudipto-iot-smarthome-jar-v${{ steps.version.outputs.version }}
          path: target/iot-smarthome-dashboard-1.0-SNAPSHOT.jar
          retention-days: 90

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: sudipto-iot-smarthome-docker-v${{ steps.version.outputs.version }}
          path: iot-smarthome-dashboard-v${{ steps.version.outputs.version }}.tar
          retention-days: 90

      # Optional: Push to Docker Hub
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      # 
      # - name: Push to Docker Hub
      #   run: |
      #     docker tag iot-smarthome-dashboard:latest ${{ secrets.DOCKER_USERNAME }}/iot-smarthome-dashboard:v${{ steps.version.outputs.version }}
      #     docker tag iot-smarthome-dashboard:latest ${{ secrets.DOCKER_USERNAME }}/iot-smarthome-dashboard:latest
      #     docker push ${{ secrets.DOCKER_USERNAME }}/iot-smarthome-dashboard:v${{ steps.version.outputs.version }}
      #     docker push ${{ secrets.DOCKER_USERNAME }}/iot-smarthome-dashboard:latest
